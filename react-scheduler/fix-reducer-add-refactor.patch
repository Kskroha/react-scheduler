From da0363e1e510083f88b3abddade6b82110eb02d4 Mon Sep 17 00:00:00 2001
From: taneros <taneros@duck.com>
Date: Sun, 10 Mar 2024 09:55:58 +0300
Subject: [PATCH] fix: reducer add refactor

---
 react-scheduler/src/{app => }/App.tsx         |  2 +-
 .../CalendarPage.module.css                   |  0
 .../pages/{ => CalendarPage}/CalendarPage.tsx | 31 +++++++++-------
 .../{ => NewEventPage}/NewEvent.module.css    |  0
 .../pages/{ => NewEventPage}/NewEventPage.tsx |  8 ++---
 react-scheduler/src/common/pages/index.tsx    |  4 +--
 react-scheduler/src/common/utils/selectors.ts | 17 +++++++++
 .../src/features/schedule/scheduleSlice.ts    | 17 ++-------
 react-scheduler/src/main.tsx                  |  4 +--
 react-scheduler/tsconfig.json                 | 35 ++++++++++---------
 react-scheduler/tsconfig.node.json            | 11 ------
 11 files changed, 64 insertions(+), 65 deletions(-)
 rename react-scheduler/src/{app => }/App.tsx (81%)
 rename react-scheduler/src/common/pages/{ => CalendarPage}/CalendarPage.module.css (100%)
 rename react-scheduler/src/common/pages/{ => CalendarPage}/CalendarPage.tsx (70%)
 rename react-scheduler/src/common/pages/{ => NewEventPage}/NewEvent.module.css (100%)
 rename react-scheduler/src/common/pages/{ => NewEventPage}/NewEventPage.tsx (95%)
 create mode 100644 react-scheduler/src/common/utils/selectors.ts
 delete mode 100644 react-scheduler/tsconfig.node.json

diff --git a/react-scheduler/src/app/App.tsx b/react-scheduler/src/App.tsx
similarity index 81%
rename from react-scheduler/src/app/App.tsx
rename to react-scheduler/src/App.tsx
index fba032a..4c6b2fb 100644
--- a/react-scheduler/src/app/App.tsx
+++ b/react-scheduler/src/App.tsx
@@ -1,4 +1,4 @@
-import { CalendarPage, NewEventPage } from "../common/pages";
+import { CalendarPage, NewEventPage } from "./common/pages";
 import { Route, Routes } from "react-router-dom";
 
 function App() {
diff --git a/react-scheduler/src/common/pages/CalendarPage.module.css b/react-scheduler/src/common/pages/CalendarPage/CalendarPage.module.css
similarity index 100%
rename from react-scheduler/src/common/pages/CalendarPage.module.css
rename to react-scheduler/src/common/pages/CalendarPage/CalendarPage.module.css
diff --git a/react-scheduler/src/common/pages/CalendarPage.tsx b/react-scheduler/src/common/pages/CalendarPage/CalendarPage.tsx
similarity index 70%
rename from react-scheduler/src/common/pages/CalendarPage.tsx
rename to react-scheduler/src/common/pages/CalendarPage/CalendarPage.tsx
index b238f83..8bcfbed 100644
--- a/react-scheduler/src/common/pages/CalendarPage.tsx
+++ b/react-scheduler/src/common/pages/CalendarPage/CalendarPage.tsx
@@ -1,32 +1,35 @@
 // import Table from "react-bootstrap/Table";
-import { DAYS, HOURS, MEMBERS } from "../mocks/constants";
-import TableCell from "../components/TableCell";
+import { DAYS, HOURS, MEMBERS } from "../../mocks/constants";
+import TableCell from "../../components/TableCell";
 import { NavLink } from "react-router-dom";
-import { useAppDispatch, useAppSelector } from "../hooks/hooks";
+import { useAppDispatch, useAppSelector } from "../../hooks/hooks";
 import styles from "./CalendarPage.module.css";
-import { setActiveFilter } from "../../features/schedule/scheduleSlice";
-import { getFilteredEvents } from "../../features/schedule/scheduleSlice";
-import { useMemo } from "react";
+import { setActiveFilter } from "../../../features/schedule/scheduleSlice";
+import { getFilteredEvents } from '../../utils/selectors';
+
 
 function CalendarPage() {
   const dispatch = useAppDispatch();
 
-  const events = useAppSelector((state) => state.schedule.events);
-  const activeFilter = useAppSelector((state) => state.schedule.activeFilter);
+  const events = useAppSelector(getFilteredEvents);
 
-  const filtered = useMemo(() => {
-    return getFilteredEvents(events, activeFilter);
-  }, [events, activeFilter]);
+  console.log(`pages/CalendarPage.tsx - line: 15 ->> events`, events)
 
   return (
     <div>
       <main className={styles.page}>
         <h1>Calendar</h1>
         <div className={styles.buttons}>
+          {/* вынести select в отдельный компонент */}
           <select
             name="filter"
             id="filter"
             onChange={(e) => dispatch(setActiveFilter(e.target.value))}
+
+            //TODO 
+            /**
+              * лучше сделать хэндлер
+              **/
           >
             <option value="all">All members</option>
             {MEMBERS.map((member) => (
@@ -39,6 +42,8 @@ function CalendarPage() {
             New event +
           </NavLink>
         </div>
+
+        {/* вынести table в отдельный компонент */}
         <table className={styles.table}>
           <thead>
             <tr>
@@ -57,7 +62,7 @@ function CalendarPage() {
                   {hour}
                 </td>
                 {DAYS.map((day) => {
-                  const schedule = filtered?.find(
+                  const schedule = events.find(
                     (event) => event.day === day && event.time === hour
                   );
                   return (
@@ -66,7 +71,7 @@ function CalendarPage() {
                       event={schedule ?? null}
                       day={day}
                       time={hour}
-                    ></TableCell>
+                    />
                   );
                 })}
               </tr>
diff --git a/react-scheduler/src/common/pages/NewEvent.module.css b/react-scheduler/src/common/pages/NewEventPage/NewEvent.module.css
similarity index 100%
rename from react-scheduler/src/common/pages/NewEvent.module.css
rename to react-scheduler/src/common/pages/NewEventPage/NewEvent.module.css
diff --git a/react-scheduler/src/common/pages/NewEventPage.tsx b/react-scheduler/src/common/pages/NewEventPage/NewEventPage.tsx
similarity index 95%
rename from react-scheduler/src/common/pages/NewEventPage.tsx
rename to react-scheduler/src/common/pages/NewEventPage/NewEventPage.tsx
index 8d7d96c..68c1907 100644
--- a/react-scheduler/src/common/pages/NewEventPage.tsx
+++ b/react-scheduler/src/common/pages/NewEventPage/NewEventPage.tsx
@@ -1,12 +1,12 @@
 import { ChangeEvent, ChangeEventHandler, FormEvent, useEffect, useState } from "react";
-import { DAYS, HOURS, MEMBERS } from "../mocks/constants";
-import { TEvent } from "../../types/types";
+import { DAYS, HOURS, MEMBERS } from "../../mocks/constants";
+import { TEvent } from "../../../types/types";
 import { v4 as uuidv4 } from "uuid";
-import { useAppDispatch, useAppSelector } from "../hooks/hooks";
+import { useAppDispatch, useAppSelector } from "../../hooks/hooks";
 import {
   createEvent,
   updateState,
-} from "../../features/schedule/scheduleSlice";
+} from "../../../features/schedule/scheduleSlice";
 import { useNavigate } from "react-router-dom";
 import styles from "./NewEvent.module.css"
 import Alert from "react-bootstrap/Alert";
diff --git a/react-scheduler/src/common/pages/index.tsx b/react-scheduler/src/common/pages/index.tsx
index 7acfc59..5e57078 100644
--- a/react-scheduler/src/common/pages/index.tsx
+++ b/react-scheduler/src/common/pages/index.tsx
@@ -1,4 +1,4 @@
-import CalendarPage from "./CalendarPage";
-import NewEventPage from "./NewEventPage";
+import CalendarPage from "./CalendarPage/CalendarPage";
+import NewEventPage from "./NewEventPage/NewEventPage";
 
 export { CalendarPage, NewEventPage };
diff --git a/react-scheduler/src/common/utils/selectors.ts b/react-scheduler/src/common/utils/selectors.ts
new file mode 100644
index 0000000..1527ddb
--- /dev/null
+++ b/react-scheduler/src/common/utils/selectors.ts
@@ -0,0 +1,17 @@
+import {RootState} from '../../app/store';
+
+import {createSelector} from 'reselect';
+
+export const getEvents = ( state: RootState ) => state.schedule.events;
+export const getActiveFilter = ( state: RootState ) => state.schedule.activeFilter;
+
+export const getFilteredEvents = createSelector(
+  [getEvents, getActiveFilter],
+  ( events, activeFilter ) => {
+    if ( activeFilter === 'all' ) {
+      return events;
+    }
+
+    return events.filter( event => event.participants.includes( activeFilter ) );
+  }
+);
\ No newline at end of file
diff --git a/react-scheduler/src/features/schedule/scheduleSlice.ts b/react-scheduler/src/features/schedule/scheduleSlice.ts
index a1a74bc..61b6b34 100644
--- a/react-scheduler/src/features/schedule/scheduleSlice.ts
+++ b/react-scheduler/src/features/schedule/scheduleSlice.ts
@@ -13,7 +13,7 @@ const initialState: ScheduleState = {
   events: [],
   createEventFailed: false,
   createEventSuccess: false,
-  activeFilter: "",
+  activeFilter: "all",
 };
 
 export const scheduleSlice = createSlice({
@@ -49,20 +49,7 @@ export const scheduleSlice = createSlice({
   },
 });
 
-export const getFilteredEvents = (events: TEvent[], activeFilter: string) => {
-  if (events) {
-    if (activeFilter === "all") {
-      return events;
-    }
-    const filteredEvents = [];
-  
-    for (const event of events) {
-      if (event.participants.includes(activeFilter)) filteredEvents.push(event);
-    }
-  
-    return filteredEvents;
-  }
-};
+
 
 export const { createEvent, deleteEvent, updateState, setActiveFilter } = scheduleSlice.actions;
 
diff --git a/react-scheduler/src/main.tsx b/react-scheduler/src/main.tsx
index c9d248b..fc8cac3 100644
--- a/react-scheduler/src/main.tsx
+++ b/react-scheduler/src/main.tsx
@@ -1,8 +1,8 @@
 import React from "react";
 import ReactDOM from "react-dom/client";
-import App from "./app/App.tsx";
+import App from "./App";
 import { BrowserRouter } from "react-router-dom";
-import store, { persistor } from "./app/store.ts";
+import store, { persistor } from "./app/store";
 import { Provider } from "react-redux";
 import { PersistGate } from "redux-persist/integration/react";
 import "bootstrap/dist/css/bootstrap.min.css";
diff --git a/react-scheduler/tsconfig.json b/react-scheduler/tsconfig.json
index a7fc6fb..7c397af 100644
--- a/react-scheduler/tsconfig.json
+++ b/react-scheduler/tsconfig.json
@@ -1,25 +1,26 @@
 {
   "compilerOptions": {
-    "target": "ES2020",
+    "target": "ESNext",
     "useDefineForClassFields": true,
-    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "lib": [
+      "DOM",
+      "DOM.Iterable",
+      "ESNext"
+    ],
+    "allowJs": false,
+    "skipLibCheck": false,
+    "esModuleInterop": false,
+    "allowSyntheticDefaultImports": true,
+    "strict": true,
+    "forceConsistentCasingInFileNames": true,
     "module": "ESNext",
-    "skipLibCheck": true,
-
-    /* Bundler mode */
-    "moduleResolution": "bundler",
-    "allowImportingTsExtensions": true,
+    "moduleResolution": "Node",
     "resolveJsonModule": true,
     "isolatedModules": true,
     "noEmit": true,
-    "jsx": "react-jsx",
-
-    /* Linting */
-    "strict": true,
-    "noUnusedLocals": true,
-    "noUnusedParameters": true,
-    "noFallthroughCasesInSwitch": true
+    "jsx": "react-jsx"
   },
-  "include": ["src"],
-  "references": [{ "path": "./tsconfig.node.json" }]
-}
+  "include": [
+    "./src"
+, "src/App.tsx"  ]
+}
\ No newline at end of file
diff --git a/react-scheduler/tsconfig.node.json b/react-scheduler/tsconfig.node.json
deleted file mode 100644
index 97ede7e..0000000
--- a/react-scheduler/tsconfig.node.json
+++ /dev/null
@@ -1,11 +0,0 @@
-{
-  "compilerOptions": {
-    "composite": true,
-    "skipLibCheck": true,
-    "module": "ESNext",
-    "moduleResolution": "bundler",
-    "allowSyntheticDefaultImports": true,
-    "strict": true
-  },
-  "include": ["vite.config.ts"]
-}
-- 
2.37.1 (Apple Git-137.1)

